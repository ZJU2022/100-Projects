'''
字符串中使用\（反斜杠）来表示转义，也就是说\后面的字符不再是它原来的意义，
例如：\n不是代表反斜杠和字符n，而是表示换行；而\t也不是代表反斜杠和字符t，而是表示制表符。
所以如果想在字符串中表示'要写成\'，
同理想表示\要写成\\。可以运行下面的代码看看会输出什么。
'''

s1 = '\'hello world!\''
s2 = '\n\\hello World!\\'
print(s1,s2)

'''
在\后面还可以跟一个八进制或者十六进制数来表示字符，
例如\141和\x61都代表小写字母a，前者是八进制的表示法，
后者是十六进制的表示法。也可以在\后面跟Unicode字符编码来表示字符，
例如\u9a86\u660a代表的是中文“骆昊”。运行下面的代码，看看输出了什么。
'''

s1 = '\141\142\143\x61\x62\x63'
s2 = '\u9a86\u660a'
print(s1, s2)
#如果不希望\表示转义，在最前面字母前加上r
s1 = r'\'hello, world!\''
s2 = r'\n\\hello, world!\\\n'
print(s1, s2, end='')
print()

'''
可以使用in和not in来判断一个字符串是否包含另外一个字符串（成员运算），
用*运算符来重复一个字符串的内容
我们也可以用[]和[:]运算符从字符串取出某个字符或某些字符（切片运算）
'''
print("<-------------------------------->")
s1 = 'hello' * 3
print(s1)
s2 = ' world!'
s1 += s2
print(s1)

print('ll' in s1)
print('GOOK' in s1)
print('KKK' not in s2)
print("=============================")
str2 = 'abc123456'
print(str2[2])
print(str2[0:2])
print(str2[2:])
print("--------------------")

print(str2[2::2]) # c246
print(str2[::2]) # ac246
print(str2[::-1]) # 654321cba
print(str2[-3:-1]) # 45
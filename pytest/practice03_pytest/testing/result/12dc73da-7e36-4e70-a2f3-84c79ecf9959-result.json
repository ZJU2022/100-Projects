{"name": "test_add[空格]", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <testing.test_calc.TestCalc object at 0x10a8cae90>, a = ' ', b = 5, expect = '请输入数字'\n\n    @pytest.mark.parametrize(\n        \"a, b, expect\",\n         add_datas, ids=myid\n     )\n    #pytest test_calc.py -k add就只运行标签为add的case，通过标签来选择执行测试用例\n    @pytest.mark.add  #pytest.ini定义了mark有add，加法\n    def test_add(self, a, b, expect): # def test_add(self,get_calc, a, b, expect):\n        #calc = Calculator()\n>       result = self.calc.add(a, b) #result = get_calc.add(a,b)\n\ntest_calc.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <python_code.calc.Calculator object at 0x10a8d8a90>, a = ' ', b = 5\n\n    def add(self, a, b):\n>       return a + b\nE       TypeError: can only concatenate str (not \"int\") to str\n\n../python_code/calc.py:10: TypeError"}, "parameters": [{"name": "a", "value": "' '"}, {"name": "b", "value": "5"}, {"name": "expect", "value": "'请输入数字'"}], "start": 1679561814772, "stop": 1679561814772, "uuid": "38184c21-693c-4d4e-93d8-4a676140dda5", "historyId": "fd0604c55c8d200923ad6972a87ee870", "testCaseId": "a7b29b08300809261dc069b49da8543b", "fullName": "test_calc.TestCalc#test_add", "labels": [{"name": "tag", "value": "add"}, {"name": "suite", "value": "test_calc"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "MacBook-Pro-106.local"}, {"name": "thread", "value": "15142-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calc"}]}